name: macOS
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm-community'
          github-token:
            ${{ secrets.GITHUB_TOKEN }}
      - name: Show system info
        run: |
          system_profiler SPSoftwareDataType SPHardwareDataType
          sysctl -a

      #      - name: Developer ID Application certificate
      #        uses: Apple-Actions/import-codesign-certs@v1
      #        with:
      #          keychain: ${{ github.run_id }}
      #          keychain-password: ${{ github.run_id }}
      #          p12-file-base64: ${{ secrets.GLUON_MACOS_CERTIFICATES_FILE_BASE64 }}
      #          p12-password: ${{ secrets.GLUON_MACOS_CERTIFICATES_PASSWORD }}

      - name: Make staging directory
        run: mkdir staging

      - name: Gluon License
        uses: gluonhq/gluon-build-license@v1
        with:
          gluon-license: ${{ secrets.GLUON_LICENSE }}

      - name: Gluon Build and Package
        id: outputfile
        run: |
          set -e
          ./mvnw -ntp -Pdesktop gluonfx:build gluonfx:package
          chmod +x ./target/gluonfx/aarch64-darwin/swaggerific
          cp -r ./target/gluonfx/aarch64-darwin/swaggerific staging/
          tar -czvf staging/swaggerific_aarch64.tar.gz -C target/gluonfx/aarch64-darwin swaggerific
          pkgbuild --root ./target/gluonfx/aarch64-darwin/ --identifier io.github.ozkanpakdil.swaggerific --version 0.0.2 --install-location /Applications Swaggerific.pkg
          productbuild --package Swaggerific.pkg SwaggerificInstaller.pkg
          cp -r SwaggerificInstaller.pkg staging/

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging

      #      - name: Provisioning Profile
      #        id: provisioning
      #        uses: Apple-Actions/download-provisioning-profiles@v1.0.1
      #        with:
      #          bundle-id: com.gluonhq.hello.HelloGluonApp
      #          profile-type: 'MAC_APP_STORE'
      #          issuer-id: ${{ secrets.GLUON_IOS_APPSTORE_ISSUER_ID }}
      #          api-key-id: ${{ secrets.GLUON_IOS_APPSTORE_KEY_ID }}
      #          api-private-key: ${{ secrets.GLUON_IOS_APPSTORE_PRIVATE_KEY }}

      #      - name: 3rd Party Mac certificate
      #        uses: Apple-Actions/import-codesign-certs@v1
      #        with:
      #          keychain: ${{ github.run_id }}
      #          keychain-password: ${{ github.run_id }}
      #          create-keychain: false
      #          p12-file-base64: ${{ secrets.GLUON_MACOS_STORE_CERTIFICATES_FILE_BASE64 }}
      #          p12-password: ${{ secrets.GLUON_MACOS_STORE_CERTIFICATES_PASSWORD }}

      # - name: Gluon Package Store
      #   id: outputfilestore
      #   run: |
      #     ./mvnw -ntp -Pdesktop gluonfx:package
      #     echo ::set-output name=path::target/gluonfx/x86_64-darwin/*.pkg

      #      - name: Upload (pkg store)
      #        uses: actions/upload-artifact@v4
      #        with:
      #          name: PackageAppStore
      #          path: ${{ steps.outputfilestore.outputs.path }}
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest_macos"
          prerelease: true
          title: "MacOS Development Build"
          files: |
            staging/*
        id: "automatic_releases"
#      - name: Upload App Store TestFlight
#        uses: Apple-Actions/upload-testflight-build@master
#        with:
#          app-path: ${{ steps.outputfilestore.outputs.path }}
#          app-type: osx
#          issuer-id: ${{ secrets.GLUON_IOS_APPSTORE_ISSUER_ID }}
#          api-key-id: ${{ secrets.GLUON_IOS_APPSTORE_KEY_ID }}
#          api-private-key: ${{ secrets.GLUON_IOS_APPSTORE_PRIVATE_KEY }}
